// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: detection_v2.proto

#ifndef PROTOBUF_INCLUDED_detection_5fv2_2eproto
#define PROTOBUF_INCLUDED_detection_5fv2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_detection_5fv2_2eproto 

namespace protobuf_detection_5fv2_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_detection_5fv2_2eproto
namespace detection_service_v2 {
class BoundingBox;
class BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
class Image;
class ImageDefaultTypeInternal;
extern ImageDefaultTypeInternal _Image_default_instance_;
class InstanceDetection;
class InstanceDetectionDefaultTypeInternal;
extern InstanceDetectionDefaultTypeInternal _InstanceDetection_default_instance_;
class InstanceDetections;
class InstanceDetectionsDefaultTypeInternal;
extern InstanceDetectionsDefaultTypeInternal _InstanceDetections_default_instance_;
}  // namespace detection_service_v2
namespace google {
namespace protobuf {
template<> ::detection_service_v2::BoundingBox* Arena::CreateMaybeMessage<::detection_service_v2::BoundingBox>(Arena*);
template<> ::detection_service_v2::Image* Arena::CreateMaybeMessage<::detection_service_v2::Image>(Arena*);
template<> ::detection_service_v2::InstanceDetection* Arena::CreateMaybeMessage<::detection_service_v2::InstanceDetection>(Arena*);
template<> ::detection_service_v2::InstanceDetections* Arena::CreateMaybeMessage<::detection_service_v2::InstanceDetections>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace detection_service_v2 {

// ===================================================================

class Image : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:detection_service_v2.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Image(Image&& from) noexcept
    : Image() {
    *this = ::std::move(from);
  }

  inline Image& operator=(Image&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Image& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Image* internal_default_instance() {
    return reinterpret_cast<const Image*>(
               &_Image_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Image* other);
  friend void swap(Image& a, Image& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Image* New() const final {
    return CreateMaybeMessage<Image>(NULL);
  }

  Image* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Image>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // bytes data = 5;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 width = 1;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint32 channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::uint32 channel() const;
  void set_channel(::google::protobuf::uint32 value);

  // bool rgb = 6;
  void clear_rgb();
  static const int kRgbFieldNumber = 6;
  bool rgb() const;
  void set_rgb(bool value);

  // @@protoc_insertion_point(class_scope:detection_service_v2.Image)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 channel_;
  bool rgb_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detection_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BoundingBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:detection_service_v2.BoundingBox) */ {
 public:
  BoundingBox();
  virtual ~BoundingBox();

  BoundingBox(const BoundingBox& from);

  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoundingBox(BoundingBox&& from) noexcept
    : BoundingBox() {
    *this = ::std::move(from);
  }

  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoundingBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoundingBox* internal_default_instance() {
    return reinterpret_cast<const BoundingBox*>(
               &_BoundingBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(BoundingBox* other);
  friend void swap(BoundingBox& a, BoundingBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoundingBox* New() const final {
    return CreateMaybeMessage<BoundingBox>(NULL);
  }

  BoundingBox* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoundingBox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoundingBox& from);
  void MergeFrom(const BoundingBox& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoundingBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 tlx = 1;
  void clear_tlx();
  static const int kTlxFieldNumber = 1;
  ::google::protobuf::int32 tlx() const;
  void set_tlx(::google::protobuf::int32 value);

  // int32 tly = 2;
  void clear_tly();
  static const int kTlyFieldNumber = 2;
  ::google::protobuf::int32 tly() const;
  void set_tly(::google::protobuf::int32 value);

  // int32 brx = 3;
  void clear_brx();
  static const int kBrxFieldNumber = 3;
  ::google::protobuf::int32 brx() const;
  void set_brx(::google::protobuf::int32 value);

  // int32 bry = 4;
  void clear_bry();
  static const int kBryFieldNumber = 4;
  ::google::protobuf::int32 bry() const;
  void set_bry(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:detection_service_v2.BoundingBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 tlx_;
  ::google::protobuf::int32 tly_;
  ::google::protobuf::int32 brx_;
  ::google::protobuf::int32 bry_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detection_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstanceDetection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:detection_service_v2.InstanceDetection) */ {
 public:
  InstanceDetection();
  virtual ~InstanceDetection();

  InstanceDetection(const InstanceDetection& from);

  inline InstanceDetection& operator=(const InstanceDetection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstanceDetection(InstanceDetection&& from) noexcept
    : InstanceDetection() {
    *this = ::std::move(from);
  }

  inline InstanceDetection& operator=(InstanceDetection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceDetection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstanceDetection* internal_default_instance() {
    return reinterpret_cast<const InstanceDetection*>(
               &_InstanceDetection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(InstanceDetection* other);
  friend void swap(InstanceDetection& a, InstanceDetection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstanceDetection* New() const final {
    return CreateMaybeMessage<InstanceDetection>(NULL);
  }

  InstanceDetection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstanceDetection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstanceDetection& from);
  void MergeFrom(const InstanceDetection& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstanceDetection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 3;
  void clear_label();
  static const int kLabelFieldNumber = 3;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // .detection_service_v2.BoundingBox box = 4;
  bool has_box() const;
  void clear_box();
  static const int kBoxFieldNumber = 4;
  private:
  const ::detection_service_v2::BoundingBox& _internal_box() const;
  public:
  const ::detection_service_v2::BoundingBox& box() const;
  ::detection_service_v2::BoundingBox* release_box();
  ::detection_service_v2::BoundingBox* mutable_box();
  void set_allocated_box(::detection_service_v2::BoundingBox* box);

  // .detection_service_v2.Image mask = 6;
  bool has_mask() const;
  void clear_mask();
  static const int kMaskFieldNumber = 6;
  private:
  const ::detection_service_v2::Image& _internal_mask() const;
  public:
  const ::detection_service_v2::Image& mask() const;
  ::detection_service_v2::Image* release_mask();
  ::detection_service_v2::Image* mutable_mask();
  void set_allocated_mask(::detection_service_v2::Image* mask);

  // float confidence = 1;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 1;
  float confidence() const;
  void set_confidence(float value);

  // uint32 label_id = 2;
  void clear_label_id();
  static const int kLabelIdFieldNumber = 2;
  ::google::protobuf::uint32 label_id() const;
  void set_label_id(::google::protobuf::uint32 value);

  // int32 mask_type = 5;
  void clear_mask_type();
  static const int kMaskTypeFieldNumber = 5;
  ::google::protobuf::int32 mask_type() const;
  void set_mask_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:detection_service_v2.InstanceDetection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::detection_service_v2::BoundingBox* box_;
  ::detection_service_v2::Image* mask_;
  float confidence_;
  ::google::protobuf::uint32 label_id_;
  ::google::protobuf::int32 mask_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detection_5fv2_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstanceDetections : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:detection_service_v2.InstanceDetections) */ {
 public:
  InstanceDetections();
  virtual ~InstanceDetections();

  InstanceDetections(const InstanceDetections& from);

  inline InstanceDetections& operator=(const InstanceDetections& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstanceDetections(InstanceDetections&& from) noexcept
    : InstanceDetections() {
    *this = ::std::move(from);
  }

  inline InstanceDetections& operator=(InstanceDetections&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceDetections& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstanceDetections* internal_default_instance() {
    return reinterpret_cast<const InstanceDetections*>(
               &_InstanceDetections_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InstanceDetections* other);
  friend void swap(InstanceDetections& a, InstanceDetections& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstanceDetections* New() const final {
    return CreateMaybeMessage<InstanceDetections>(NULL);
  }

  InstanceDetections* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstanceDetections>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstanceDetections& from);
  void MergeFrom(const InstanceDetections& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstanceDetections* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .detection_service_v2.InstanceDetection predictions = 1;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 1;
  ::detection_service_v2::InstanceDetection* mutable_predictions(int index);
  ::google::protobuf::RepeatedPtrField< ::detection_service_v2::InstanceDetection >*
      mutable_predictions();
  const ::detection_service_v2::InstanceDetection& predictions(int index) const;
  ::detection_service_v2::InstanceDetection* add_predictions();
  const ::google::protobuf::RepeatedPtrField< ::detection_service_v2::InstanceDetection >&
      predictions() const;

  // @@protoc_insertion_point(class_scope:detection_service_v2.InstanceDetections)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::detection_service_v2::InstanceDetection > predictions_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_detection_5fv2_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Image

// uint32 width = 1;
inline void Image::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 Image::width() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.width)
  return width_;
}
inline void Image::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.width)
}

// uint32 height = 2;
inline void Image::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 Image::height() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.height)
  return height_;
}
inline void Image::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.height)
}

// uint32 channel = 3;
inline void Image::clear_channel() {
  channel_ = 0u;
}
inline ::google::protobuf::uint32 Image::channel() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.channel)
  return channel_;
}
inline void Image::set_channel(::google::protobuf::uint32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.channel)
}

// string type = 4;
inline void Image::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::type() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.type)
  return type_.GetNoArena();
}
inline void Image::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.type)
}
#if LANG_CXX11
inline void Image::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:detection_service_v2.Image.type)
}
#endif
inline void Image::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:detection_service_v2.Image.type)
}
inline void Image::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:detection_service_v2.Image.type)
}
inline ::std::string* Image::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:detection_service_v2.Image.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_type() {
  // @@protoc_insertion_point(field_release:detection_service_v2.Image.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:detection_service_v2.Image.type)
}

// bytes data = 5;
inline void Image::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::data() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.data)
  return data_.GetNoArena();
}
inline void Image::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.data)
}
#if LANG_CXX11
inline void Image::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:detection_service_v2.Image.data)
}
#endif
inline void Image::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:detection_service_v2.Image.data)
}
inline void Image::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:detection_service_v2.Image.data)
}
inline ::std::string* Image::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:detection_service_v2.Image.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_data() {
  // @@protoc_insertion_point(field_release:detection_service_v2.Image.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:detection_service_v2.Image.data)
}

// bool rgb = 6;
inline void Image::clear_rgb() {
  rgb_ = false;
}
inline bool Image::rgb() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.Image.rgb)
  return rgb_;
}
inline void Image::set_rgb(bool value) {
  
  rgb_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.Image.rgb)
}

// -------------------------------------------------------------------

// BoundingBox

// int32 tlx = 1;
inline void BoundingBox::clear_tlx() {
  tlx_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::tlx() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.BoundingBox.tlx)
  return tlx_;
}
inline void BoundingBox::set_tlx(::google::protobuf::int32 value) {
  
  tlx_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.BoundingBox.tlx)
}

// int32 tly = 2;
inline void BoundingBox::clear_tly() {
  tly_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::tly() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.BoundingBox.tly)
  return tly_;
}
inline void BoundingBox::set_tly(::google::protobuf::int32 value) {
  
  tly_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.BoundingBox.tly)
}

// int32 brx = 3;
inline void BoundingBox::clear_brx() {
  brx_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::brx() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.BoundingBox.brx)
  return brx_;
}
inline void BoundingBox::set_brx(::google::protobuf::int32 value) {
  
  brx_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.BoundingBox.brx)
}

// int32 bry = 4;
inline void BoundingBox::clear_bry() {
  bry_ = 0;
}
inline ::google::protobuf::int32 BoundingBox::bry() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.BoundingBox.bry)
  return bry_;
}
inline void BoundingBox::set_bry(::google::protobuf::int32 value) {
  
  bry_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.BoundingBox.bry)
}

// -------------------------------------------------------------------

// InstanceDetection

// float confidence = 1;
inline void InstanceDetection::clear_confidence() {
  confidence_ = 0;
}
inline float InstanceDetection::confidence() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.confidence)
  return confidence_;
}
inline void InstanceDetection::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.InstanceDetection.confidence)
}

// uint32 label_id = 2;
inline void InstanceDetection::clear_label_id() {
  label_id_ = 0u;
}
inline ::google::protobuf::uint32 InstanceDetection::label_id() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.label_id)
  return label_id_;
}
inline void InstanceDetection::set_label_id(::google::protobuf::uint32 value) {
  
  label_id_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.InstanceDetection.label_id)
}

// string label = 3;
inline void InstanceDetection::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InstanceDetection::label() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.label)
  return label_.GetNoArena();
}
inline void InstanceDetection::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:detection_service_v2.InstanceDetection.label)
}
#if LANG_CXX11
inline void InstanceDetection::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:detection_service_v2.InstanceDetection.label)
}
#endif
inline void InstanceDetection::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:detection_service_v2.InstanceDetection.label)
}
inline void InstanceDetection::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:detection_service_v2.InstanceDetection.label)
}
inline ::std::string* InstanceDetection::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:detection_service_v2.InstanceDetection.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InstanceDetection::release_label() {
  // @@protoc_insertion_point(field_release:detection_service_v2.InstanceDetection.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InstanceDetection::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:detection_service_v2.InstanceDetection.label)
}

// .detection_service_v2.BoundingBox box = 4;
inline bool InstanceDetection::has_box() const {
  return this != internal_default_instance() && box_ != NULL;
}
inline void InstanceDetection::clear_box() {
  if (GetArenaNoVirtual() == NULL && box_ != NULL) {
    delete box_;
  }
  box_ = NULL;
}
inline const ::detection_service_v2::BoundingBox& InstanceDetection::_internal_box() const {
  return *box_;
}
inline const ::detection_service_v2::BoundingBox& InstanceDetection::box() const {
  const ::detection_service_v2::BoundingBox* p = box_;
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.box)
  return p != NULL ? *p : *reinterpret_cast<const ::detection_service_v2::BoundingBox*>(
      &::detection_service_v2::_BoundingBox_default_instance_);
}
inline ::detection_service_v2::BoundingBox* InstanceDetection::release_box() {
  // @@protoc_insertion_point(field_release:detection_service_v2.InstanceDetection.box)
  
  ::detection_service_v2::BoundingBox* temp = box_;
  box_ = NULL;
  return temp;
}
inline ::detection_service_v2::BoundingBox* InstanceDetection::mutable_box() {
  
  if (box_ == NULL) {
    auto* p = CreateMaybeMessage<::detection_service_v2::BoundingBox>(GetArenaNoVirtual());
    box_ = p;
  }
  // @@protoc_insertion_point(field_mutable:detection_service_v2.InstanceDetection.box)
  return box_;
}
inline void InstanceDetection::set_allocated_box(::detection_service_v2::BoundingBox* box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete box_;
  }
  if (box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, box, submessage_arena);
    }
    
  } else {
    
  }
  box_ = box;
  // @@protoc_insertion_point(field_set_allocated:detection_service_v2.InstanceDetection.box)
}

// int32 mask_type = 5;
inline void InstanceDetection::clear_mask_type() {
  mask_type_ = 0;
}
inline ::google::protobuf::int32 InstanceDetection::mask_type() const {
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.mask_type)
  return mask_type_;
}
inline void InstanceDetection::set_mask_type(::google::protobuf::int32 value) {
  
  mask_type_ = value;
  // @@protoc_insertion_point(field_set:detection_service_v2.InstanceDetection.mask_type)
}

// .detection_service_v2.Image mask = 6;
inline bool InstanceDetection::has_mask() const {
  return this != internal_default_instance() && mask_ != NULL;
}
inline void InstanceDetection::clear_mask() {
  if (GetArenaNoVirtual() == NULL && mask_ != NULL) {
    delete mask_;
  }
  mask_ = NULL;
}
inline const ::detection_service_v2::Image& InstanceDetection::_internal_mask() const {
  return *mask_;
}
inline const ::detection_service_v2::Image& InstanceDetection::mask() const {
  const ::detection_service_v2::Image* p = mask_;
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetection.mask)
  return p != NULL ? *p : *reinterpret_cast<const ::detection_service_v2::Image*>(
      &::detection_service_v2::_Image_default_instance_);
}
inline ::detection_service_v2::Image* InstanceDetection::release_mask() {
  // @@protoc_insertion_point(field_release:detection_service_v2.InstanceDetection.mask)
  
  ::detection_service_v2::Image* temp = mask_;
  mask_ = NULL;
  return temp;
}
inline ::detection_service_v2::Image* InstanceDetection::mutable_mask() {
  
  if (mask_ == NULL) {
    auto* p = CreateMaybeMessage<::detection_service_v2::Image>(GetArenaNoVirtual());
    mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:detection_service_v2.InstanceDetection.mask)
  return mask_;
}
inline void InstanceDetection::set_allocated_mask(::detection_service_v2::Image* mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mask_;
  }
  if (mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mask, submessage_arena);
    }
    
  } else {
    
  }
  mask_ = mask;
  // @@protoc_insertion_point(field_set_allocated:detection_service_v2.InstanceDetection.mask)
}

// -------------------------------------------------------------------

// InstanceDetections

// repeated .detection_service_v2.InstanceDetection predictions = 1;
inline int InstanceDetections::predictions_size() const {
  return predictions_.size();
}
inline void InstanceDetections::clear_predictions() {
  predictions_.Clear();
}
inline ::detection_service_v2::InstanceDetection* InstanceDetections::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:detection_service_v2.InstanceDetections.predictions)
  return predictions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::detection_service_v2::InstanceDetection >*
InstanceDetections::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:detection_service_v2.InstanceDetections.predictions)
  return &predictions_;
}
inline const ::detection_service_v2::InstanceDetection& InstanceDetections::predictions(int index) const {
  // @@protoc_insertion_point(field_get:detection_service_v2.InstanceDetections.predictions)
  return predictions_.Get(index);
}
inline ::detection_service_v2::InstanceDetection* InstanceDetections::add_predictions() {
  // @@protoc_insertion_point(field_add:detection_service_v2.InstanceDetections.predictions)
  return predictions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::detection_service_v2::InstanceDetection >&
InstanceDetections::predictions() const {
  // @@protoc_insertion_point(field_list:detection_service_v2.InstanceDetections.predictions)
  return predictions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace detection_service_v2

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_detection_5fv2_2eproto
